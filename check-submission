#! /usr/bin/env ruby

require 'net/http'
require 'nokogiri'
require 'uri'
require 'json'

SITES = [
  [
    "7th-Circle Pyrite",
    "https://www.7thcirclepyrite.com/submissions",
    "fantasy, mystical, <2500, Â¢"
  ],
  [
    "After the Storm",
    "https://medium.com/after-the-storm/submission-guide-for-after-the-storm-472ac07eb0e7",
    "sf, fantasy, anti-capitalist, 1000-5000, $"
  ],
  [
    "Allegory",
    "https://www.allegoryezine.com/submissions",
    "sf, fantasy, horror, <5000, Nov 2025, $"
  ],
  [
    "Altered Reality",
    "https://www.alteredrealitymag.com/",
    "sf, fantasy, Â¢"
  ],
  [
    "Altitude Press",
    "https://altitude-press.com/submission-guidelines/",
    "sf, <2000, $"
  ],
  [
    "Another Realm",
    "https://anotherealm.com/faq/submit.php",
    "sf, fantasy, horror, <5000, $"
  ],
  [
    "Analog",
    "https://analogsf.com/contact-us/writers-guidelines/",
    "sf, $$$"
  ],
  [
    "Andromeda Spaceways",
    "https://andromedaspaceways.com/submissions-manager/",
    "sf, fantasy, horror"
  ],
  [
    "AntipodeanSF",
    "https://www.antisf.com.au/submission-guidelines",
    "flash, sf, fantasy, australian, twists, <1000"
  ],
  [
    "Apex Magazine",
    "https://www.apexbookcompany.com/a/blog/apex-magazine/post/apex-magazine-submissions-guidelines",
    "flash ðŸ’š?, sf, fantasy, horror"
  ],
  [
    "Arcturus",
    "https://arcturusmag.com/submit/",
    "flash, sf, fantasy, <5000, Â¢"
  ],
  [
    "Asimov's",
    "https://asimovs.com/contact-us/writers-guidelines/",
    "sf, $$$"
  ],
  [
    "Asimov Press",
    "https://press.asimov.com/about",
    "sf, science focus, $$$"
  ],
  [
    "Augur",
    "https://augursociety.org/submissions/",
    "sf, fantasy"
  ],
  [
    "Baffling Magazine",
    "https://www.bafflingmag.com/submissions",
    "sf, fantasy, <1200, queer, $$$"
  ],
  [
    "Tales & Feathers",
    "https://augursociety.org/submissions/",
    "fantasy, cozy"
  ],
  [
    "Aurealis",
    "https://aurealis.com.au/submissions/",
    "sf, australian"
  ],
  [
    "Beneath Ceaseless Skies",
    "https://www.beneath-ceaseless-skies.com/submissions/",
    "fantasy"
  ],
  [
    "Bewildering Stories",
    "https://www.bewilderingstories.com/submissions.html",
    "sf, fantasy, flash, Â¢"
  ],
  [
    "BFS Horizons",
    "https://britishfantasysociety.org/get-in-touch/bfs-horizons/",
    "fantasy, horror, <5000, $"
  ],
  [
    "The Bizarchives",
    "https://thebizarchives.com/submissions/",
    "sf, fantasy, weird, dark, Â¢",
  ],
  [
    "Black Cat Weekly",
    "https://wildside.moksha.io/publication/black-cat-weekly-science-fiction/guidelines",
    "sf, fantasy, $",
  ],
  [
    "Black Hare Press",
    "https://blackharepress.com/blogs/open-calls",
    "sf, fantasy, dark, <2000, $"
  ],
  [
    "Blue Earth Review",
    "https://blueearthreview.submittable.com/submit",
    "sf, fantasy, <4000, Â¢"
  ],
  [
    "Bottleneck",
    "https://www.bottleneck-sf.com/submission-guidelines",
    "sf, fantasy, 3000-8000, Â¢"
  ],
  [
    "The Canadian Sepulchral",
    "https://joewiwcharuk.wixsite.com/the-canadian-sepulch/submissions",
    "horror, canadian, 1000-5000, Â¢"
  ],
  [
    "Carnage House",
    "https://carnagehouse.com/submission/subs.php",
    "horror, 500-5500, $"
  ],
  [
    "The Colored Lens",
    "https://thecoloredlens.com/?page_id=137752",
    "sf, fantasy, 500-5000, $"
  ],
  [
    "CommuterLit",
    "https://commuterlit.com/for-writers/submission-guidelines/",
    "sf, fantasy, 500-4000, Â¢"
  ],
  [
    "Clarkesworld",
    "https://clarkesworldmagazine.com/submissions/",
    "sf, fantasy, $$$"
  ],
  [
    "Corner Bar Magazine",
    "http://www.cornerbarmagazine.com/how.html",
    "sf, Â¢"
  ],
  [
    "Creation Magazine",
    "https://sites.google.com/creationmag.org/creationmag/submit",
    "sf, fantasy, horror, <5000, Â¢"
  ],
  [
    "Crepuscular Magazine",
    "https://www.patreon.com/posts/submission-85137677",
    "sf, fantasy, horror <250, Â¢"
  ],
  [
    "Crow & Cross Keys",
    "https://crowcrosskeys.com/submit/",
    "sf, fantasy, folk, flash, <5000, Â¢"
  ],
  [
    "The Daily Tomorrow",
    "https://www.thedailytomorrow.com/submissions",
    "sf, 2100-3500, serial, Â¢"
  ],
  [
    "Del Sol Review",
    "https://delsolreview.webdelsol.com/guidelines.htm",
    "sf, fantasy, 300-5000, Â¢"
  ],
  [
    "Daily Science Fiction",
    "https://dailysciencefiction.com/",
    "flash"
  ],
  [
    "Diabolical Plots",
    "https://www.diabolicalplots.com/guidelines/",
    "sf, fantasy"
  ],
  [
    "Ecological Citizen",
    "https://ecologicalcitizen.net/submitting-fiction.html",
    "sf, eco, <2000, Â¢"
  ],
  [
    "Eldritch Science",
    "https://tnfff.org/submissions/",
    "sf, Â¢"
  ],
  [
    "Electric Spec",
    "https://www.electricspec.com/Submissions.html",
    "sf, fantasy, horror, <7000, $"
  ],
  [
    "Every Day Fiction",
    "https://everydayfiction.com/submit-story/",
    "flash"
  ],
  [
    "F(r)iction",
    "https://frictionlit.org/about/submit/",
    "flash, weird, $, fee"
  ],
  [
    "Factor Four Magazine",
    "https://factorfourmag.com/submissionsinfo/",
    "sf, fantasy, horror, flash, $$"
  ],
  [
    "Fantasy & Science Fiction",
    "https://www.sfsite.com/fsf/glines.htm",
    "sf, fantasy, $$$"
  ],
  [
    "Fantasy Magazine",
    "https://psychopomp.com/fantasy-magazine-guidelines/",
    "fantasy"
  ],
  [
    "Farthest Star Publishing",
    "https://www.fartheststarpublishing.com/general-8",
    "sf, fantasy, novelette, 8000-17000, $"
  ],
  [
    "Five on the Fifth",
    "https://fiveonthefifth.submittable.com/submit",
    "horror, flash, Â¢"
  ],
  [
    "Flash Point Science Fiction",
    "https://flashpointsf.com/submissions/",
    "sf, fantasy, <1000, $"
  ],
  [
    "Free Flash Fiction",
    "https://freeflashfiction.com/submissions/",
    "sf, fantasy, horror, flash, <500, Â¢"
  ],
  [
    "Freedom Fiction Journal",
    "https://www.freedomfiction.com/submissions/",
    "sf, fantasy, flash <500, 1000-12000, Â¢"

  ],
  [
    "Fusion Fragment",
    "https://www.fusionfragment.com/submissions/",
    "sf, $"
  ],
  [
    "The Future Fire",
    "https://futurefire.net/guidelines/fiction.html",
    "sf, social, flash <1000, <17000, $"
  ],
  [
    "Galaxy's Edge",
    "https://www.galaxysedge.com/submissions/",
    "sf"
  ],
  [
    "The Genre Society",
    "https://www.thegenresociety.com/submissions",
    "sf, fantasy, horror, Â¢"
  ],
  [
    "Harvey Duckman",
    "https://harvey-duckman-is-alive.ghost.io/submissions/",
    "sf, fantasy, $"
  ],
  [
    "Haven Speculative",
    "https://www.havenspec.com/submit/",
    "sf, fantasy, <6000, $$"
  ],
  [
    "Havok",
    "https://gohavok.com/submission-guidelines/",
    "sf, fantasy, themed, flash, 300-1000, Â¢"
  ],
  [
    "Hawthorn & Ash",
    "https://ironfaeriepublishing.com/hawthorn-ash/",
    "fantasy, horror, flash <1000, $"
  ],
  [
    "Interzone",
    "https://interzone.press/submissions/",
    "sf, $$"
  ],
  [
    "Lightspeed",
    "https://adamant.moksha.io/publication/lightspeed",
    "sf, fantasy, $$$"
  ],
  [
    "Neon Dystopia",
    "https://www.neondystopia.com/?p=100042814",
    "sf, cyberpunk"
  ],
  [
    "Nightmare",
    "https://adamant.moksha.io/publication/nightmare/guidelines",
    "horror, $$$"
  ],
  [
    "Penumbric",
    "https://www.penumbric.com/subs.html",
    "sf, fantasy, horror, edgy"
  ],
  [
    "Psychopomp Novellas",
    "https://psychopomp.com/novella-guidelines/",
    "novellas"
  ],
  [
    "Shoreline of Infinity",
    "https://www.shorelineofinfinity.com/submissions/",
    "sf"
  ],
  [
    "Small Wonders",
    "https://smallwondersmag.com/submissions/",
    "flash"
  ],
  [
    "Strange Horizons",
    "http://strangehorizons.com/submit/fiction-submission-guidelines/",
    "sf, fantasy, $$$"
  ],
  [
    "The Deadlands",
    "https://psychopomp.com/the-deadlands-guidelines/",
    "sf, fantasy, horror, anthology"
  ],
  [
    "Three-Lobed Burning Eye",
    "https://www.3lobedmag.com/submissions.html",
    "sf, dark fantasy, horror, $$$"
  ],
  [
    "Trembling with Fear",
    "https://horrortree.com/submissions/",
    "horror"
  ],
  [
    "Uncanny",
    "https://www.uncannymagazine.com/submissions/",
    "sf"
  ],
  [
    "Weird Tales",
    "https://www.weirdtales.com/submissions",
    "sf"
  ],
  [
    "Worlds of If",
    "https://worldsofifmagazine.com/submissions",
    "sf"
  ],
  [
    "Worlds of Possibility",
    "https://worldsofpossibility.moksha.io/closed",
    "sf, fantasy"
  ],
  [
    "swamp pink",
    "https://swamp-pink.charleston.edu/submit/",
    "sf"
  ],
]

GITHUB_TOKEN = ENV['GITHUB_TOKEN']
MODEL = "openai/gpt-4.1"

abort "Missing GITHUB_TOKEN." unless GITHUB_TOKEN && !GITHUB_TOKEN.empty?

def fetch_url(url)
  uri = URI.parse(url)
  Net::HTTP.start(uri.host, uri.port, use_ssl: uri.scheme == 'https') do |http|
    req = Net::HTTP::Get.new(uri)
    response = http.request(req)
    if response.is_a?(Net::HTTPRedirection)
      location = response['location']
      return fetch_url(location)
    elsif !response.is_a?(Net::HTTPSuccess)
      raise "Failed to fetch #{url}: #{response.code}"
    end
    response.body
  end
end

def extract_main_text(html, max_length = 16_000)
  doc = Nokogiri::HTML(html)

  # Try to find 'main' first, then 'article', then the largest section/div
  main_node = doc.at('main') || doc.at('article')
  unless main_node
    # Heuristic: Find the <div> or <section> with the most <p> tags
    candidates = doc.css('div, section')
    main_node = candidates.max_by { |c| c.css('p').size }
  end
  main_node ||= doc.at('body') # fallback

  # Remove navigation, header, footer, aside and scripts/styles
  main_node.search('header, nav, footer, aside, script, style, noscript').remove

  # Get the visible text, squeeze spaces, strip, and join paragraphs.
  text = main_node.css('p, h1, h2, h3, li').map(&:text).join("\n").gsub(/\s+/, ' ').strip

  # Truncate to max_length, ideally at a sentence boundary.
  if text.length > max_length
    # Cut at the last period before the limit, if found, else hard cut
    idx = text.rindex('.', max_length) || max_length
    text = text[0, idx].strip
    text << "..." if text.length >= max_length
  end

  text
end

def ask_github_models(prompt, api_key, model)
  uri = URI("https://models.github.ai/inference/chat/completions")
  headers = {
    "Authorization" => "Bearer #{api_key}",
    "Content-Type" => "application/json",
    "User-Agent" => "ruby-openai-check"
  }
  body = {
    "model" => model,
    "messages" => [
      {"role" => "system", "content" => "You are an assistant that summarizes submission status for literary magazines."},
      {"role" => "user", "content" => prompt}
    ],
    "max_tokens" => 256,
    "temperature" => 0.1
  }.to_json

  Net::HTTP.start(uri.host, uri.port, use_ssl: true) do |http|
    req = Net::HTTP::Post.new(uri, headers)
    req.body = body
    res = http.request(req)
    unless res.is_a?(Net::HTTPSuccess)
      throw "API Error: #{res.code} #{res.body}"
    end
    response_json = JSON.parse(res.body)
    # Look for OpenAI-style completion
    response_json.dig("choices", 0, "message", "content") || "(No response)"
  end
end

def output_rows(rows, icon)
  rows
    .sort_by {|(title, page, *_)| title }
    .each do |(title, page, _, reason, tags)|
      puts "|[#{title}](#{page})|#{icon}|#{tags}|<details>#{reason}</details>|"
    end
end

# Main script starts here

results = []

sites = ARGV.empty? ? SITES : ARGV.map { |site| ["", site, ""] }
sites.each do |(title, page, tags)|
  STDERR.print "."
  raw_content = fetch_url(page)
  page_content = extract_main_text(raw_content)

  prompt = <<~PROMPT
    This is the submission guideline page for a magazine.
    Based on its current content, is the magazine currently OPEN for fiction submissions?
    Only answer "YES" or "NO" then after a newline provide a brief reason.
    Here is the page content:

    #{page_content}
  PROMPT

  response = ask_github_models(prompt, GITHUB_TOKEN, MODEL)

  answer, reason = response.split("\n").reject { |line| line.nil? || line.empty? }

  results << [title, page, answer, reason, tags]
rescue => e
  STDERR.print "!"
  results << [title, page, "ERROR", e.message, ""]
end

puts "# Submission Tracker"
puts
puts "Just a few magazines I'm watching for open submission season"
puts
puts "|Site|Open?|Tag Along!|Why???|"
puts "|---|---|---|---|"

by_answer = results.group_by { |(title, page, answer, reason)| answer }
yup = by_answer["YES"] || []
nope = by_answer["NO"] || []
errors = by_answer["ERROR"] || []

output_rows(yup, "ðŸ’š")
output_rows(nope, "ðŸ›‘")
output_rows(errors, "ðŸ’¥")
